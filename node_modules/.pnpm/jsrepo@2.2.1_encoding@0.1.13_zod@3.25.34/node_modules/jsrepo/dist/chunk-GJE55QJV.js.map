{"version":3,"sources":["../src/types.ts","../src/constants.ts","../src/utils/registry-providers/azure.ts","../src/utils/blocks/ts/strings.ts","../src/utils/registry-providers/bitbucket.ts","../src/utils/registry-providers/github.ts","../src/utils/blocks/ts/url.ts","../src/utils/registry-providers/gitlab.ts","../src/utils/registry-providers/http.ts","../src/utils/registry-providers/jsrepo.ts","../src/utils/blocks/ts/result.ts","../src/utils/manifest.ts","../src/utils/registry-providers/index.ts"],"names":["blockSchema","categorySchema","manifestMeta","peerDependencySchema","configFileSchema","manifestConfigFileSchema","accessLevel","manifestSchema","MANIFEST_FILE","CONFIG_FILE","DEFAULT_BRANCH","azure","url","opts","parsed","parseUrl","owner","repoName","normalizedUrl","project","ref","refs","state","resourcePath","versionType","token","filePath","color","fullyQualified","repo","rest","specifier","startsWithOneOf","str","strings","s","endsWithOneOf","bitbucket","f","headers","key","value","response","github","join","segments","removeLeadingAndTrailingSlash","segment","newSegment","removeLeadingSlash","removeTrailingSlash","addTrailingSlash","BASE_URL","gitlab","baseUrl","error","tempRef","http","u","parsedUrl","NAME_REGEX","jsrepo","scope","registryName","version","name","Result","result","success","failure","fn","val","Ok","err","Err","defaultVal","_","def","message","parseManifest","json","validated","P","createManifest","categories","configFiles","config","providers","selectProvider","p","fetchRaw","verbose","fetchManifest","manifest"],"mappings":"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","file":"chunk-GJE55QJV.js","sourcesContent":["import * as v from 'valibot';\n\nexport const blockSchema = v.object({\n\tname: v.string(),\n\tcategory: v.string(),\n\tlocalDependencies: v.array(v.string()),\n\tdependencies: v.array(v.string()),\n\tdevDependencies: v.array(v.string()),\n\ttests: v.boolean(),\n\tlist: v.optional(v.boolean(), true),\n\t/** Where to find the block relative to root */\n\tdirectory: v.string(),\n\tsubdirectory: v.boolean(),\n\tfiles: v.array(v.string()),\n\t_imports_: v.record(v.string(), v.string()),\n});\n\nexport const categorySchema = v.object({\n\tname: v.string(),\n\tblocks: v.array(blockSchema),\n});\n\nexport const manifestMeta = v.object({\n\tauthors: v.optional(v.array(v.string())),\n\tbugs: v.optional(v.string()),\n\tdescription: v.optional(v.string()),\n\thomepage: v.optional(v.string()),\n\trepository: v.optional(v.string()),\n\ttags: v.optional(v.array(v.string())),\n});\n\nexport const peerDependencySchema = v.record(\n\tv.string(),\n\tv.union([\n\t\tv.string(),\n\t\tv.object({\n\t\t\tversion: v.string(),\n\t\t\tmessage: v.string(),\n\t\t}),\n\t])\n);\n\nexport type PeerDependency = v.InferOutput<typeof peerDependencySchema>;\n\nexport const configFileSchema = v.object({\n\tname: v.string(),\n\tpath: v.string(),\n\texpectedPath: v.optional(v.string()),\n\toptional: v.optional(v.boolean(), false),\n});\n\nexport type ConfigFile = v.InferOutput<typeof configFileSchema>;\n\nexport const manifestConfigFileSchema = v.object({\n\t...configFileSchema.entries,\n\tdependencies: v.optional(v.array(v.string())),\n\tdevDependencies: v.optional(v.array(v.string())),\n});\n\nexport const accessLevel = v.union([\n\tv.literal('public'),\n\tv.literal('private'),\n\tv.literal('marketplace'),\n]);\n\nexport const manifestSchema = v.object({\n\tname: v.optional(v.string()),\n\tversion: v.optional(v.string()),\n\tmeta: v.optional(manifestMeta),\n\taccess: v.optional(accessLevel),\n\tpeerDependencies: v.optional(peerDependencySchema),\n\tconfigFiles: v.optional(v.array(manifestConfigFileSchema)),\n\tcategories: v.array(categorySchema),\n});\n\nexport type Meta = v.InferOutput<typeof manifestMeta>;\n\nexport type Category = v.InferOutput<typeof categorySchema>;\n\nexport type Block = v.InferOutput<typeof blockSchema>;\n\nexport type Manifest = v.InferOutput<typeof manifestSchema>;\n","export const MANIFEST_FILE = 'jsrepo-manifest.json';\nexport const CONFIG_FILE = 'jsrepo.json';\n","import color from 'chalk';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface AzureProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tproject: string;\n\trefs: 'heads' | 'tags';\n\tref: string;\n}\n\n/** Valid paths\n *\n *  `azure/<org>/<project>/<repo>/(tags|heads)/<ref>`\n */\nexport const azure: RegistryProvider = {\n\tname: 'azure',\n\n\tmatches: (url) => url.toLowerCase().startsWith('azure'),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://dev.azure.com/${owner}/_git/${repoName}`;\n\t},\n\n\tstate: async (url) => {\n\t\tconst {\n\t\t\turl: normalizedUrl,\n\t\t\towner,\n\t\t\tproject,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\trefs,\n\t\t} = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\trefs,\n\t\t\tproject,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: azure,\n\t\t} satisfies AzureProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== azure.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${azure.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, project, ref, refs } = state as AzureProviderState;\n\n\t\tconst versionType = refs === 'tags' ? 'tag' : 'branch';\n\n\t\treturn new URL(\n\t\t\t`https://dev.azure.com/${owner}/${project}/_apis/git/repositories/${repoName}/items?path=${resourcePath}&api-version=7.2-preview.1&versionDescriptor.version=${ref}&versionDescriptor.versionType=${versionType}`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\towner: string;\n\tproject: string;\n\trepoName: string;\n\tref: string;\n\trefs: 'tags' | 'heads';\n\tspecifier?: string;\n} {\n\tconst repo = url.replaceAll(/(azure\\/)/g, '');\n\n\tlet [owner, project, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined = undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string = DEFAULT_BRANCH;\n\n\t// checks if the type of the ref is tags or heads\n\tlet refs: 'heads' | 'tags' = 'heads';\n\n\tif (['tags', 'heads'].includes(rest[0])) {\n\t\trefs = rest[0] as 'heads' | 'tags';\n\n\t\tif (rest[1] && rest[1] !== '') {\n\t\t\tref = rest[1];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: `azure/${owner}/${project}/${repoName}${ref ? `/${refs}/${ref}` : ''}`,\n\t\towner: owner,\n\t\trepoName: repoName,\n\t\tproject,\n\t\tref,\n\t\trefs,\n\t\tspecifier,\n\t};\n}\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** Returns true if `str` starts with one of the provided `strings`.\n *\n * @param str\n * @param strings\n * @returns\n *\n * ## Usage\n * ```ts\n * startsWithOneOf('ab', 'a', 'c'); // true\n * startsWithOneOf('cc', 'a', 'b'); // false\n * ```\n */\nexport function startsWithOneOf(str: string, strings: string[]): boolean {\n\tfor (const s of strings) {\n\t\tif (str.startsWith(s)) return true;\n\t}\n\n\treturn false;\n}\n\n/** Returns true if `str` starts with one of the provided `strings`.\n *\n * @param str\n * @param strings\n * @returns\n *\n * ## Usage\n * ```ts\n * endsWithOneOf('cb', 'a', 'b'); // true\n * endsWithOneOf('cc', 'a', 'b'); // false\n * ```\n */\nexport function endsWithOneOf(str: string, strings: string[]): boolean {\n\tfor (const s of strings) {\n\t\tif (str.endsWith(s)) return true;\n\t}\n\n\treturn false;\n}\n\n/** Case insensitive equality. Returns true if `left.toLowerCase()` and `right.toLowerCase()` are equal.\n *\n * @param left\n * @param right\n * @returns\n *\n * ## Usage\n * ```ts\n * iEqual('Hello, World!', 'hello, World!'); // true\n * ```\n */\nexport function iEqual(left: string, right: string): boolean {\n\treturn left.toLowerCase() === right.toLowerCase();\n}\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'master';\n\nexport interface BitBucketProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `bitbucket/ieedan/std`\n *\n * `https://bitbucket.org/ieedan/std/src/main/`\n *\n * `https://bitbucket.org/ieedan/std/src/next/`\n *\n * `https://bitbucket.org/ieedan/std/src/v2.0.0/`\n *\n */\nexport const bitbucket: RegistryProvider = {\n\tname: 'bitbucket',\n\n\tmatches: (url) => startsWithOneOf(url.toLowerCase(), ['bitbucket', 'https://bitbucket.org']),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://bitbucket.org/${owner}/${repoName}`;\n\t},\n\n\tstate: async (url, { token, fetch: f = fetch } = {}) => {\n\t\tlet { url: normalizedUrl, owner, repoName, ref } = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst headers = new Headers();\n\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tconst [key, value] = bitbucket.authHeader!(token);\n\n\t\t\t\t\theaders.append(key, value);\n\t\t\t\t}\n\n\t\t\t\tconst response = await f(\n\t\t\t\t\t`https://api.bitbucket.org/2.0/repositories/${owner}/${repoName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\t// @ts-ignore yes but we know\n\t\t\t\t\tref = data.mainbranch.name as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// well find out it isn't correct later with a better error\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\tref,\n\t\t\trepoName,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: bitbucket,\n\t\t} satisfies BitBucketProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== bitbucket.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${bitbucket.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, ref } = state as BitBucketProviderState;\n\n\t\treturn new URL(\n\t\t\tresourcePath,\n\t\t\t`https://api.bitbucket.org/2.0/repositories/${owner}/${repoName}/src/${ref}/`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified = false }: ParseOptions\n): { url: string; owner: string; repoName: string; ref?: string; specifier?: string } {\n\tconst repo = url.replaceAll(/(https:\\/\\/bitbucket.org\\/)|(bitbucket\\/)/g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest[0] === 'src') {\n\t\tref = rest[1];\n\t}\n\n\treturn {\n\t\turl: `bitbucket/${owner}/${repoName}${ref ? `/src/${ref}` : ''}`,\n\t\tspecifier,\n\t\towner,\n\t\trepoName: repoName,\n\t\tref,\n\t};\n}\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface GitHubProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `https://github.com/<owner>/<repo>`\n *\n * `github/<owner>/<repo>`\n *\n * `github/<owner>/<repo>/tree/<ref>`\n */\nexport const github: RegistryProvider = {\n\tname: 'github',\n\n\tmatches: (url) => startsWithOneOf(url.toLowerCase(), ['github', 'https://github.com']),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://github.com/${owner}/${repoName}`;\n\t},\n\n\tstate: async (url, { token } = {}) => {\n\t\tlet { url: normalizedUrl, owner, repoName, ref } = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`https://api.github.com/repos/${owner}/${repoName}`, {\n\t\t\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t\t\t});\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst res = await response.json();\n\n\t\t\t\t\tref = res.default_branch as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// we just want to continue on blissfully unaware the user will get an error later\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\tref,\n\t\t\trepoName,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: github,\n\t\t} satisfies GitHubProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== github.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${github.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, ref } = state as GitHubProviderState;\n\n\t\treturn new URL(resourcePath, `https://ungh.cc/repos/${owner}/${repoName}/files/${ref}/`);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `token ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified = false }: ParseOptions\n): { url: string; owner: string; repoName: string; ref?: string; specifier?: string } {\n\tconst repo = url.replaceAll(/(https:\\/\\/github.com\\/)|(github\\/)/g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest.length > 0) {\n\t\tif (rest[0] === 'tree') {\n\t\t\tref = rest[1];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: `github/${owner}/${repoName}${ref ? `/tree/${ref}` : ''}`,\n\t\tspecifier,\n\t\towner,\n\t\trepoName: repoName,\n\t\tref,\n\t};\n}\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** Joins the segments into a single url correctly handling leading and trailing slashes in each segment.\n *\n * @param segments\n * @returns\n *\n * ## Usage\n * ```ts\n * const url = join('https://example.com', '', 'api/', '/examples/');\n *\n * console.log(url); // https://example.com/api/examples\n * ```\n */\nexport function join(...segments: string[]): string {\n\treturn segments\n\t\t.map((s) => removeLeadingAndTrailingSlash(s))\n\t\t.filter(Boolean)\n\t\t.join('/');\n}\n\n/** Removes the leading and trailing slash from the segment (if they exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = removeLeadingAndTrailingSlash('/example/');\n *\n * console.log(segment); // 'example'\n * ```\n */\nexport function removeLeadingAndTrailingSlash(segment: string): string {\n\tconst newSegment = removeLeadingSlash(segment);\n\treturn removeTrailingSlash(newSegment);\n}\n\n/** Adds a leading and trailing to the beginning and end of the segment (if it doesn't already exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = addLeadingAndTrailingSlash('example');\n *\n * console.log(segment); // '/example/'\n * ```\n */\nexport function addLeadingAndTrailingSlash(segment: string): string {\n\t// this is a weird case so feel free to handle it however you think it makes the most sense\n\tif (segment === '') return '//';\n\n\tconst newSegment = addLeadingSlash(segment);\n\treturn addTrailingSlash(newSegment);\n}\n\n/** Removes the leading slash from the beginning of the segment (if it exists)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = removeLeadingSlash('/example');\n *\n * console.log(segment); // 'example'\n * ```\n */\nexport function removeLeadingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (newSegment.startsWith('/')) {\n\t\tnewSegment = newSegment.slice(1);\n\t}\n\n\treturn newSegment;\n}\n\n/** Adds a leading slash to the beginning of the segment (if it doesn't already exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = addLeadingSlash('example');\n *\n * console.log(segment); // '/example'\n * ```\n */\nexport function addLeadingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (!newSegment.startsWith('/')) {\n\t\tnewSegment = `/${newSegment}`;\n\t}\n\n\treturn newSegment;\n}\n\n/** Removes the trailing slash from the end of the segment (if it exists)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = removeTrailingSlash('example/');\n *\n * console.log(segment); // 'example'\n * ```\n */\nexport function removeTrailingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (newSegment.endsWith('/')) {\n\t\tnewSegment = newSegment.slice(0, newSegment.length - 1);\n\t}\n\n\treturn newSegment;\n}\n\n/** Adds a trailing slash to the end of the segment (if it doesn't already exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = addTrailingSlash('example');\n *\n * console.log(segment); // 'example/'\n * ```\n */\nexport function addTrailingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (!newSegment.endsWith('/')) {\n\t\tnewSegment = `${newSegment}/`;\n\t}\n\n\treturn newSegment;\n}\n\n/** Removes the last segment of the url.\n *\n * @param url\n *\n * ## Usage\n * ```ts\n * const url = upOneLevel('/first/second');\n *\n * console.log(url); // '/first'\n * ```\n */\nexport function upOneLevel(url: string): string {\n\tif (url === '/') return url;\n\n\tconst lastIndex = removeTrailingSlash(url).lastIndexOf('/');\n\n\treturn url.slice(0, url.length - lastIndex - 1);\n}\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport * as u from '../blocks/ts/url';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\nconst BASE_URL = 'https://gitlab.com';\n\nexport interface GitLabProviderState extends RegistryProviderState {\n\tbaseUrl: string;\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `https://gitlab.com/ieedan/std`\n *\n * `https://gitlab.com/ieedan/std/-/tree/next`\n *\n * `https://gitlab.com/ieedan/std/-/tree/v2.0.0`\n *\n * `https://gitlab.com/ieedan/std/-/tree/v2.0.0?ref_type=tags`\n *\n * Self hosted:\n *\n * `gitlab:https://example.com/ieedan/std`\n */\nexport const gitlab: RegistryProvider = {\n\tname: 'gitlab',\n\n\tmatches: (url) =>\n\t\tstartsWithOneOf(url.toLowerCase(), ['gitlab/', 'gitlab:', 'https://gitlab.com']),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { baseUrl, owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn u.join(baseUrl, owner, repoName);\n\t},\n\n\tstate: async (url, { token, fetch: f = fetch } = {}) => {\n\t\tlet {\n\t\t\tbaseUrl,\n\t\t\turl: normalizedUrl,\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t} = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst headers = new Headers();\n\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tconst [key, value] = gitlab.authHeader!(token);\n\n\t\t\t\t\theaders.append(key, value);\n\t\t\t\t}\n\n\t\t\t\tconst response = await f(\n\t\t\t\t\tu.join(\n\t\t\t\t\t\tbaseUrl,\n\t\t\t\t\t\t`api/v4/projects/${encodeURIComponent(`${owner}/${repoName}`)}`\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\theaders,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\t// @ts-ignore yes but we know\n\t\t\t\t\tref = data.default_branch as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// well find out it isn't correct later with a better error\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\tbaseUrl,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: gitlab,\n\t\t} satisfies GitLabProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== gitlab.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${gitlab.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { baseUrl, owner, repoName, ref } = state as GitLabProviderState;\n\n\t\treturn new URL(\n\t\t\tu.join(\n\t\t\t\tbaseUrl,\n\t\t\t\t`api/v4/projects/${encodeURIComponent(`${owner}/${repoName}`)}`,\n\t\t\t\t`repository/files/${encodeURIComponent(resourcePath)}/raw?ref=${ref}`\n\t\t\t)\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['PRIVATE-TOKEN', token],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}: ${error}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tbaseUrl: string;\n\towner: string;\n\trepoName: string;\n\tref?: string;\n\tspecifier?: string;\n} {\n\tlet baseUrl = BASE_URL;\n\n\tif (url.startsWith('gitlab:')) {\n\t\tbaseUrl = new URL(url.slice(7)).origin;\n\t}\n\n\tconst repo = url.replaceAll(/gitlab\\/|https:\\/\\/gitlab\\.com\\/|gitlab:https?:\\/\\/[^/]+\\//g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest[0] === '-' && rest[1] === 'tree') {\n\t\tif (rest[2].includes('?')) {\n\t\t\tconst [tempRef] = rest[2].split('?');\n\n\t\t\tref = tempRef;\n\t\t} else {\n\t\t\tref = rest[2];\n\t\t}\n\t}\n\n\tconst isCustom = baseUrl !== BASE_URL;\n\n\treturn {\n\t\t// if the url is custom instance of gitlab we must append gitlab: so that the url can be parsed correctly\n\t\turl: u.join(\n\t\t\tisCustom ? `gitlab:${baseUrl}` : baseUrl,\n\t\t\t`${owner}/${repoName}${ref ? `/-/tree/${ref}` : ''}`\n\t\t),\n\t\tbaseUrl,\n\t\towner: owner,\n\t\trepoName: repoName,\n\t\tref,\n\t\tspecifier,\n\t};\n}\n","import color from 'chalk';\nimport * as u from '../blocks/ts/url';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nexport interface HttpProviderState extends RegistryProviderState {}\n\n/** Valid paths\n *\n *  `(https|http)://example.com`\n */\nexport const http: RegistryProvider = {\n\tname: 'http',\n\n\tmatches: (url) => {\n\t\t// if parsing is a success then it's a match\n\t\ttry {\n\t\t\tnew URL(url);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { url: u } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn new URL(u).origin;\n\t},\n\n\tstate: async (url) => {\n\t\tconst { url: normalizedUrl } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: http,\n\t\t} satisfies HttpProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== http.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${http.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\treturn new URL(resourcePath, state.url);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\treturn `There was an error fetching ${color.bold(new URL(filePath, state.url).toString())}\n\t\n${color.bold(error)}`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tspecifier?: string;\n} {\n\tconst parsedUrl = new URL(url);\n\n\tlet segments = parsedUrl.pathname.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = segments.slice(segments.length - 2).join('/');\n\n\t\tsegments = segments.slice(0, segments.length - 2);\n\t}\n\n\treturn {\n\t\turl: u.addTrailingSlash(u.join(parsedUrl.origin, ...segments)),\n\t\tspecifier,\n\t};\n}\n","import color from 'chalk';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\n/** Regex for scopes and registry names.\n * Names that don't match this regex will be rejected.\n *\n * ### Valid\n * ```txt\n * console\n * console0\n * console-0\n * ```\n *\n * ### Invalid\n * ```txt\n * Console\n * 0console\n * -console\n * console-\n * console--0\n * ```\n */\nexport const NAME_REGEX = /^(?![-0-9])(?!.*--)[a-z0-9]*(?:-[a-z0-9]+)*$/gi;\n\nexport const BASE_URL = 'https://www.jsrepo.com';\n\nexport interface JsrepoProviderState extends RegistryProviderState {\n\tscope: string;\n\tregistryName: string;\n\tversion: string;\n}\n\n/** Valid paths\n *\n *  `@ieedan/std`\n *  `@ieedan/std@latest`\n *  `@ieedan/std@1.0.0`\n *  `@ieedan/std@1.0.0/ts/math`\n */\nexport const jsrepo: RegistryProvider = {\n\tname: 'jsrepo',\n\n\tmatches: (url) => url.startsWith('@'),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { scope, registryName, version } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `${BASE_URL}/${scope}/${registryName}/v/${version}`;\n\t},\n\n\tstate: async (url) => {\n\t\tconst parsed = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\t...parsed,\n\t\t\tprovider: jsrepo,\n\t\t} satisfies JsrepoProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== jsrepo.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${jsrepo.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { scope, registryName, version } = state as JsrepoProviderState;\n\n\t\treturn new URL(\n\t\t\t`${BASE_URL}/api/scopes/${scope}/${registryName}/v/${version}/files/${resourcePath}`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['x-api-key', token],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\tconst { scope, registryName, version } = state as JsrepoProviderState;\n\n\t\treturn `There was an error fetching ${filePath} from ${scope}/${registryName}@${version}\n\t\n${color.bold(error)}`;\n\t},\n};\n\nexport function parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tspecifier?: string;\n\tscope: string;\n\tregistryName: string;\n\tversion: string;\n} {\n\tconst [scope, name, ...rest] = url.split('/');\n\n\tconst [registryName, version] = name.split('@');\n\n\tlet specifier: string | undefined = undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\t}\n\n\tconst parsedUrl = `${scope}/${name}`;\n\n\treturn {\n\t\turl: parsedUrl,\n\t\tspecifier,\n\t\tscope,\n\t\tregistryName,\n\t\tversion: version ?? 'latest',\n\t};\n}\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** This is just a helper type used only within this file */\ntype _Result<T, E> = { ok: true; val: T } | { ok: false; err: E };\n\n/** Result allows you to show to a consumer that a function might throw and force them to handle it.\n *\n *  `T` Value type\n *\n *  `E` Error type\n *\n * ## Usage\n *\n * ```ts\n * function functionThatMightFail(): Result<T, E>;\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n *\n * const result = functionThatMightFail();\n *\n * console.log(result.unwrap()); // \"Hello, World!\"\n * ```\n */\nclass Result<T, E> {\n\tprivate readonly _result: _Result<T, E>;\n\n\tconstructor(result: _Result<T, E>) {\n\t\tthis._result = result;\n\t}\n\n\t/** Allows you to run callbacks based on the result.\n\t *\n\t * @param success callback to be run when result is success\n\t * @param failure callback to be run when result is failure\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.match(\n\t * \t(val) => val,\n\t * \t() => {\n\t * \t\tthrow new Error('oops!')\n\t * \t}\n\t * );\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const val = result.match(\n\t * \t(val) => val,\n\t * \t() => {\n\t * \t\tthrow new Error('oops!')\n\t * \t}\n\t * );\n\t *\n\t * console.log(val); // \"Hello, World!\"\n\t * ```\n\t */\n\tmatch<A, B = A>(success: (val: T) => A, failure: (err: E) => B): A | B {\n\t\tif (!this._result.ok) {\n\t\t\treturn failure(this._result.err);\n\t\t}\n\n\t\treturn success(this._result.val);\n\t}\n\n\t/** Maps `Result<T, E>` to `Result<A, E>` using the passed mapping function\n\t *\n\t * @param fn Mapping function\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.map((val) => val.length);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const hello = result.map((val) => val.slice(0, 5));\n\t *\n\t * console.log(hello.unwrap()); // \"Hello\"\n\t * ```\n\t */\n\tmap<A>(fn: (val: T) => A): Result<A, E> {\n\t\treturn this.match(\n\t\t\t(val) => Ok(fn(val)),\n\t\t\t(err) => Err(err)\n\t\t);\n\t}\n\n\t/** In the `Ok` case returns the mapped value using the function else returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned when `Err`\n\t * @param fn Mapping function to map in case of `Ok`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapOr(1, (val) => val.length);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(1, (val) => val.length);\n\t *\n\t * console.log(length); // 3\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t */\n\tmapOr<A>(defaultVal: A, fn: (val: T) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(_) => defaultVal\n\t\t);\n\t}\n\n\t/** In the `Ok` case returns the mapped value using `fn` else returns value of `def`\n\t *\n\t * @param def Mapping function called when `Err`\n\t * @param fn Mapping function called when `Ok`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapOrElse(() => 1, (val) => val.length);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOrElse(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 3\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t */\n\tmapOrElse<A>(def: (err: E) => A, fn: (val: T) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(err) => def(err)\n\t\t);\n\t}\n\n\t/** Maps `Result<T, E>` to `Result<T, A>` using the passed mapping function\n\t *\n\t * @param fn Mapping function\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErr((err) => getCodeMsg(err));\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(10);\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErr(() => \"Error\");\n\t *\n\t * console.log(message); // \"Error\"\n\t * ```\n\t */\n\tmapErr<A>(fn: (err: E) => A): Result<T, A> {\n\t\treturn this.match(\n\t\t\t(val) => Ok(val),\n\t\t\t(err) => Err(fn(err))\n\t\t);\n\t}\n\n\t/** In the `Err` case returns the mapped value using the function else returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned when `Ok`\n\t * @param fn Mapping function to map in case of `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErrOr(\"Should've been error\", (err) => getCodeMsg(err));\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErrOr(\"Should've been error\", () => \"Error\");\n\t *\n\t * console.log(message); // \"Should've been error\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(10);\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErrOr(\"Should've been error\", () => \"Error\");\n\t *\n\t * console.log(message); // \"Error\"\n\t * ```\n\t */\n\tmapErrOr<A>(defaultVal: A, fn: (err: E) => A): A {\n\t\treturn this.match(\n\t\t\t(_) => defaultVal,\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** In the `Err` case returns the mapped value using the function else returns value of `def`\n\t *\n\t * @param def Mapping function called when `Ok`\n\t * @param fn Mapping function called when `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErrOrElse(() => \"Value\", (_) => \"Error!\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapErrOrElse(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 4\n\t * ```\n\t */\n\tmapErrOrElse<A>(def: (val: T) => A, fn: (err: E) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => def(val),\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** Returns true if result is `Ok`\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.isOk();\n\t * ```\n\t */\n\tisOk(): boolean {\n\t\treturn this.match(\n\t\t\t() => true,\n\t\t\t() => false\n\t\t);\n\t}\n\n\t/** Returns true if result is `Err`\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.isErr();\n\t * ```\n\t */\n\tisErr(): boolean {\n\t\treturn this.match(\n\t\t\t() => false,\n\t\t\t() => true\n\t\t);\n\t}\n\n\t/** Tries to return value if value is `Err` throws generic error message.\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrap();\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrap()); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.unwrap(); // Error: Attempted to call `.unwrap()` on a non `Ok` value.\n\t * ```\n\t */\n\tunwrap(): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t() => {\n\t\t\t\tthrow new Error('Attempted to call `.unwrap()` on a non `Ok` value.');\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Tries to return err if value is `Ok` throws generic error message.\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErr();\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.unwrapErr(); // Error: Attempted to call `.unwrapErr()` on a non `Err` value.\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErr()); // \"oops!\"\n\t * ```\n\t */\n\tunwrapErr(): E {\n\t\treturn this.match(\n\t\t\t() => {\n\t\t\t\tthrow new Error('Attempted to call `.unwrapErr()` on a non `Err` value.');\n\t\t\t},\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to unwrap the value if value is `Err` returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned if `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapOr(7);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOr(\"Yellow!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOr(\"Yellow!\")); // \"Yellow!\"\n\t * ```\n\t */\n\tunwrapOr(defaultVal: T): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t(_) => defaultVal\n\t\t);\n\t}\n\n\t/** Tries to unwrap the error if vale is `Ok` returns `defaultVal`\n\t *\n\t * @param defaultVal\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErrOr(\"Error\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOr(\"Yellow!\")); // \"Yellow!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOr(\"Yellow!\")); // \"oops!\"\n\t * ```\n\t */\n\tunwrapErrOr(defaultVal: E): E {\n\t\treturn this.match(\n\t\t\t() => defaultVal,\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to return the value if value is `Err` calls `fn`\n\t *\n\t * @param fn Function called if `Err`\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapOrElse(() => \"Hello!\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOrElse(() => \"oops!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOrElse(() => \"Hello!\")); // \"Hello!\"\n\t * ```\n\t *\n\t */\n\tunwrapOrElse(fn: (err: E) => T): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** Tries to return the error if value is `Ok` calls `fn`\n\t *\n\t * @param fn Function called if `Ok`\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErrOrElse(() => \"Error!\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOrElse(() => \"oops!\")); // \"oops!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOrElse(() => \"Hello!\")); // \"oops!\"\n\t * ```\n\t *\n\t */\n\tunwrapErrOrElse(fn: (val: T) => E): E {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to return value if value is `Err` throws custom error message.\n\t *\n\t * @param message Message to show when value is `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.expect(\"Custom message\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expect(\"I failed!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.expect(\"I failed!\"); // Error: I failed!\n\t * ```\n\t */\n\texpect(message: string): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t() => {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Tries to return error value if value is `Ok` throws custom error message\n\t *\n\t * @param message\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.expectErr(\"Custom message\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expectErr(\"I failed!\")); // Error: I failed!\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expectErr(\"I failed!\")); // \"oops!\"\n\t * ```\n\t */\n\texpectErr(message: string): E {\n\t\treturn this.match(\n\t\t\t() => {\n\t\t\t\tthrow new Error(message);\n\t\t\t},\n\t\t\t(err) => err\n\t\t);\n\t}\n}\n\n/** Returns a new `Ok` result type with the provided value\n *\n * @param val Value of the result\n * @returns\n *\n * ## Usage\n *\n * ```ts\n * Ok(true);\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const functionThatCanFail = (condition) => {\n * \tif (condition) {\n * \t\tOk(\"Success\")\n * \t}\n *\n * \treturn Err(\"Failure\");\n * }\n * ```\n */\nexport function Ok<T>(val: T): Result<T, never> {\n\treturn new Result<T, never>({ ok: true, val });\n}\n\n/** Returns a new `Err` result type with the provided error\n *\n * @param err Error of the result\n * @returns\n *\n * ## Usage\n *\n * ```ts\n * Err(\"I failed!\");\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const functionThatCanFail = (condition) => {\n * \tif (condition) {\n * \t\tOk(\"Success\")\n * \t}\n *\n * \treturn Err(\"Failure\");\n * }\n * ```\n */\nexport function Err<E>(err: E): Result<never, E> {\n\treturn new Result<never, E>({ ok: false, err });\n}\n\nexport type { Result };\n","import * as v from 'valibot';\nimport { type Category, type Manifest, categorySchema, manifestSchema } from '../types';\nimport { Err, Ok, type Result } from './blocks/ts/result';\nimport type { RegistryConfig } from './config';\n\n/** Parses the json string (if it can be) into a manifest.\n *\n * @param json\n */\nexport function parseManifest(json: string): Result<Manifest, string> {\n\tlet parsed: unknown;\n\n\ttry {\n\t\tparsed = JSON.parse(json);\n\t} catch (err) {\n\t\treturn Err(`Error parsing manifest json ${err}`);\n\t}\n\n\t// first gen array-based config\n\tif (Array.isArray(parsed)) {\n\t\tconst validated = v.safeParse(v.array(categorySchema), parsed);\n\n\t\tif (!validated.success) {\n\t\t\treturn Err(\n\t\t\t\t`Error parsing categories (array-based config) ${validated.issues.join(' ')}`\n\t\t\t);\n\t\t}\n\n\t\treturn Ok({\n\t\t\tprivate: false,\n\t\t\tcategories: validated.output,\n\t\t});\n\t}\n\n\tconst validated = v.safeParse(manifestSchema, parsed);\n\n\tif (!validated.success) {\n\t\treturn Err(`Error parsing manifest ${validated.issues.join(' ')}`);\n\t}\n\n\treturn Ok(validated.output);\n}\n\nexport function createManifest(\n\tcategories: Category[],\n\tconfigFiles: Manifest['configFiles'],\n\tconfig: RegistryConfig\n) {\n\tconst manifest: Manifest = {\n\t\tname: config.name,\n\t\tversion: config.version,\n\t\tmeta: config.meta,\n\t\taccess: config.access,\n\t\tpeerDependencies: config.peerDependencies,\n\t\tconfigFiles,\n\t\tcategories,\n\t};\n\n\treturn manifest;\n}\n","import { MANIFEST_FILE } from '../../constants';\nimport type { Manifest } from '../../types';\nimport { Err, Ok, type Result } from '../blocks/ts/result';\nimport { parseManifest } from '../manifest';\nimport { type AzureProviderState, azure } from './azure';\nimport { type BitBucketProviderState, bitbucket } from './bitbucket';\nimport { type GitHubProviderState, github } from './github';\nimport { type GitLabProviderState, gitlab } from './gitlab';\nimport { http } from './http';\nimport { type JsrepoProviderState, jsrepo } from './jsrepo';\nimport type { RegistryProvider, RegistryProviderState } from './types';\n\nexport const providers = [jsrepo, github, gitlab, bitbucket, azure, http];\n\nexport function selectProvider(url: string): RegistryProvider | undefined {\n\tconst provider = providers.find((p) => p.matches(url));\n\n\treturn provider;\n}\n\nexport type FetchOptions = {\n\ttoken: string;\n\t/** Override the fetch method. */\n\tfetch?: typeof fetch;\n\tverbose: (str: string) => void;\n};\n\nexport async function fetchRaw(\n\tstate: RegistryProviderState,\n\tresourcePath: string,\n\t{ verbose, fetch: f = fetch, token }: Partial<FetchOptions> = {}\n): Promise<Result<string, string>> {\n\tconst url = await state.provider.resolveRaw(state, resourcePath);\n\n\tverbose?.(`Trying to fetch from ${url}`);\n\n\ttry {\n\t\t// having headers as a record covers more fetch implementations\n\t\tconst headers: Record<string, string> = {};\n\n\t\tif (token !== undefined && state.provider.authHeader) {\n\t\t\tconst [key, value] = state.provider.authHeader(token);\n\n\t\t\theaders[key] = value;\n\t\t}\n\n\t\tconst response = await f(url.toString(), { headers });\n\n\t\tverbose?.(`Got a response from ${url} ${response.status} ${response.statusText}`);\n\n\t\tif (!response.ok) {\n\t\t\treturn Err(\n\t\t\t\tstate.provider.formatFetchError(\n\t\t\t\t\tstate,\n\t\t\t\t\tresourcePath,\n\t\t\t\t\t`${response.status} ${response.statusText}`\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn Ok(await response.text());\n\t} catch (err) {\n\t\treturn Err(state.provider.formatFetchError(state, resourcePath, err));\n\t}\n}\n\nexport async function fetchManifest(\n\tstate: RegistryProviderState,\n\t{ fetch: f = fetch, ...rest }: Partial<FetchOptions> = {}\n): Promise<Result<Manifest, string>> {\n\tconst manifest = await fetchRaw(state, MANIFEST_FILE, { fetch: f, ...rest });\n\n\tif (manifest.isErr()) return Err(manifest.unwrapErr());\n\n\treturn parseManifest(manifest.unwrap());\n}\n\nexport * from './types';\n\nexport {\n\tjsrepo,\n\tgithub,\n\tgitlab,\n\tbitbucket,\n\tazure,\n\thttp,\n\ttype JsrepoProviderState,\n\ttype AzureProviderState,\n\ttype GitHubProviderState,\n\ttype GitLabProviderState,\n\ttype BitBucketProviderState,\n};\n"]}